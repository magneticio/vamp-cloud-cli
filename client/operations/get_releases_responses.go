// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/magneticio/vamp-cloud-cli/models"
)

// GetReleasesReader is a Reader for the GetReleases structure.
type GetReleasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReleasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReleasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReleasesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetReleasesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetReleasesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetReleasesOK creates a GetReleasesOK with default headers values
func NewGetReleasesOK() *GetReleasesOK {
	return &GetReleasesOK{}
}

/*GetReleasesOK handles this case with default header values.

List of release IDs
*/
type GetReleasesOK struct {
	Payload *models.Releases
}

func (o *GetReleasesOK) Error() string {
	return fmt.Sprintf("[GET /releases][%d] getReleasesOK  %+v", 200, o.Payload)
}

func (o *GetReleasesOK) GetPayload() *models.Releases {
	return o.Payload
}

func (o *GetReleasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Releases)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleasesUnauthorized creates a GetReleasesUnauthorized with default headers values
func NewGetReleasesUnauthorized() *GetReleasesUnauthorized {
	return &GetReleasesUnauthorized{}
}

/*GetReleasesUnauthorized handles this case with default header values.

The requester is not authorized.
*/
type GetReleasesUnauthorized struct {
	Payload *models.Error
}

func (o *GetReleasesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /releases][%d] getReleasesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReleasesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetReleasesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleasesInternalServerError creates a GetReleasesInternalServerError with default headers values
func NewGetReleasesInternalServerError() *GetReleasesInternalServerError {
	return &GetReleasesInternalServerError{}
}

/*GetReleasesInternalServerError handles this case with default header values.

The server has encountered a situation it does not know how to handle.
*/
type GetReleasesInternalServerError struct {
	Payload *models.Error
}

func (o *GetReleasesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /releases][%d] getReleasesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetReleasesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetReleasesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleasesDefault creates a GetReleasesDefault with default headers values
func NewGetReleasesDefault(code int) *GetReleasesDefault {
	return &GetReleasesDefault{
		_statusCode: code,
	}
}

/*GetReleasesDefault handles this case with default header values.

Generic error.
*/
type GetReleasesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get releases default response
func (o *GetReleasesDefault) Code() int {
	return o._statusCode
}

func (o *GetReleasesDefault) Error() string {
	return fmt.Sprintf("[GET /releases][%d] GetReleases default  %+v", o._statusCode, o.Payload)
}

func (o *GetReleasesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetReleasesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
