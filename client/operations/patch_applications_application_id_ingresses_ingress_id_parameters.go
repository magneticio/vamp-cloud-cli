// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/magneticio/vamp-cloud-cli/models"
)

// NewPatchApplicationsApplicationIDIngressesIngressIDParams creates a new PatchApplicationsApplicationIDIngressesIngressIDParams object
// with the default values initialized.
func NewPatchApplicationsApplicationIDIngressesIngressIDParams() *PatchApplicationsApplicationIDIngressesIngressIDParams {
	var ()
	return &PatchApplicationsApplicationIDIngressesIngressIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchApplicationsApplicationIDIngressesIngressIDParamsWithTimeout creates a new PatchApplicationsApplicationIDIngressesIngressIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchApplicationsApplicationIDIngressesIngressIDParamsWithTimeout(timeout time.Duration) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	var ()
	return &PatchApplicationsApplicationIDIngressesIngressIDParams{

		timeout: timeout,
	}
}

// NewPatchApplicationsApplicationIDIngressesIngressIDParamsWithContext creates a new PatchApplicationsApplicationIDIngressesIngressIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchApplicationsApplicationIDIngressesIngressIDParamsWithContext(ctx context.Context) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	var ()
	return &PatchApplicationsApplicationIDIngressesIngressIDParams{

		Context: ctx,
	}
}

// NewPatchApplicationsApplicationIDIngressesIngressIDParamsWithHTTPClient creates a new PatchApplicationsApplicationIDIngressesIngressIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchApplicationsApplicationIDIngressesIngressIDParamsWithHTTPClient(client *http.Client) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	var ()
	return &PatchApplicationsApplicationIDIngressesIngressIDParams{
		HTTPClient: client,
	}
}

/*PatchApplicationsApplicationIDIngressesIngressIDParams contains all the parameters to send to the API endpoint
for the patch applications application ID ingresses ingress ID operation typically these are written to a http.Request
*/
type PatchApplicationsApplicationIDIngressesIngressIDParams struct {

	/*ApplicationID
	  application ID

	*/
	ApplicationID int64
	/*Ingress
	  The application to create

	*/
	Ingress *models.Ingress
	/*IngressID
	  ingress ID

	*/
	IngressID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) WithTimeout(timeout time.Duration) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) WithContext(ctx context.Context) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) WithHTTPClient(client *http.Client) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationID adds the applicationID to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) WithApplicationID(applicationID int64) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	o.SetApplicationID(applicationID)
	return o
}

// SetApplicationID adds the applicationId to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) SetApplicationID(applicationID int64) {
	o.ApplicationID = applicationID
}

// WithIngress adds the ingress to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) WithIngress(ingress *models.Ingress) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	o.SetIngress(ingress)
	return o
}

// SetIngress adds the ingress to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) SetIngress(ingress *models.Ingress) {
	o.Ingress = ingress
}

// WithIngressID adds the ingressID to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) WithIngressID(ingressID int64) *PatchApplicationsApplicationIDIngressesIngressIDParams {
	o.SetIngressID(ingressID)
	return o
}

// SetIngressID adds the ingressId to the patch applications application ID ingresses ingress ID params
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) SetIngressID(ingressID int64) {
	o.IngressID = ingressID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchApplicationsApplicationIDIngressesIngressIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param applicationID
	if err := r.SetPathParam("applicationID", swag.FormatInt64(o.ApplicationID)); err != nil {
		return err
	}

	if o.Ingress != nil {
		if err := r.SetBodyParam(o.Ingress); err != nil {
			return err
		}
	}

	// path param ingressID
	if err := r.SetPathParam("ingressID", swag.FormatInt64(o.IngressID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
