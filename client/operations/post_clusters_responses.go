// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/magneticio/vamp-cloud-cli/models"
)

// PostClustersReader is a Reader for the PostClusters structure.
type PostClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostClustersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostClustersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostClustersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostClustersOK creates a PostClustersOK with default headers values
func NewPostClustersOK() *PostClustersOK {
	return &PostClustersOK{}
}

/*PostClustersOK handles this case with default header values.

ID of created cluster
*/
type PostClustersOK struct {
	Payload *PostClustersOKBody
}

func (o *PostClustersOK) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] postClustersOK  %+v", 200, o.Payload)
}

func (o *PostClustersOK) GetPayload() *PostClustersOKBody {
	return o.Payload
}

func (o *PostClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostClustersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostClustersUnauthorized creates a PostClustersUnauthorized with default headers values
func NewPostClustersUnauthorized() *PostClustersUnauthorized {
	return &PostClustersUnauthorized{}
}

/*PostClustersUnauthorized handles this case with default header values.

The requester is not authorized.
*/
type PostClustersUnauthorized struct {
	Payload *models.Error
}

func (o *PostClustersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] postClustersUnauthorized  %+v", 401, o.Payload)
}

func (o *PostClustersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostClustersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostClustersInternalServerError creates a PostClustersInternalServerError with default headers values
func NewPostClustersInternalServerError() *PostClustersInternalServerError {
	return &PostClustersInternalServerError{}
}

/*PostClustersInternalServerError handles this case with default header values.

The server has encountered a situation it does not know how to handle.
*/
type PostClustersInternalServerError struct {
	Payload *models.Error
}

func (o *PostClustersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] postClustersInternalServerError  %+v", 500, o.Payload)
}

func (o *PostClustersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostClustersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostClustersDefault creates a PostClustersDefault with default headers values
func NewPostClustersDefault(code int) *PostClustersDefault {
	return &PostClustersDefault{
		_statusCode: code,
	}
}

/*PostClustersDefault handles this case with default header values.

Generic error.
*/
type PostClustersDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post clusters default response
func (o *PostClustersDefault) Code() int {
	return o._statusCode
}

func (o *PostClustersDefault) Error() string {
	return fmt.Sprintf("[POST /clusters][%d] PostClusters default  %+v", o._statusCode, o.Payload)
}

func (o *PostClustersDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostClustersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostClustersOKBody post clusters o k body
swagger:model PostClustersOKBody
*/
type PostClustersOKBody struct {

	// The cluster ID
	ID int64 `json:"id,omitempty"`
}

// Validate validates this post clusters o k body
func (o *PostClustersOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostClustersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostClustersOKBody) UnmarshalBinary(b []byte) error {
	var res PostClustersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
