// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/magneticio/vamp-cloud-cli/models"
)

// GetPoliciesReader is a Reader for the GetPolicies structure.
type GetPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPoliciesOK creates a GetPoliciesOK with default headers values
func NewGetPoliciesOK() *GetPoliciesOK {
	return &GetPoliciesOK{}
}

/*GetPoliciesOK handles this case with default header values.

List of policy objects
*/
type GetPoliciesOK struct {
	Payload *models.Policies
}

func (o *GetPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetPoliciesOK) GetPayload() *models.Policies {
	return o.Payload
}

func (o *GetPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Policies)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesUnauthorized creates a GetPoliciesUnauthorized with default headers values
func NewGetPoliciesUnauthorized() *GetPoliciesUnauthorized {
	return &GetPoliciesUnauthorized{}
}

/*GetPoliciesUnauthorized handles this case with default header values.

The requester is not authorized.
*/
type GetPoliciesUnauthorized struct {
	Payload *models.Error
}

func (o *GetPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPoliciesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesInternalServerError creates a GetPoliciesInternalServerError with default headers values
func NewGetPoliciesInternalServerError() *GetPoliciesInternalServerError {
	return &GetPoliciesInternalServerError{}
}

/*GetPoliciesInternalServerError handles this case with default header values.

The server has encountered a situation it does not know how to handle.
*/
type GetPoliciesInternalServerError struct {
	Payload *models.Error
}

func (o *GetPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPoliciesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesDefault creates a GetPoliciesDefault with default headers values
func NewGetPoliciesDefault(code int) *GetPoliciesDefault {
	return &GetPoliciesDefault{
		_statusCode: code,
	}
}

/*GetPoliciesDefault handles this case with default header values.

Generic error.
*/
type GetPoliciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get policies default response
func (o *GetPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *GetPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /policies][%d] GetPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *GetPoliciesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
