// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/magneticio/vamp-cloud-cli/models"
)

// GetServicesReader is a Reader for the GetServices structure.
type GetServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetServicesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetServicesOK creates a GetServicesOK with default headers values
func NewGetServicesOK() *GetServicesOK {
	return &GetServicesOK{}
}

/*GetServicesOK handles this case with default header values.

List of service objects
*/
type GetServicesOK struct {
	Payload *models.Services
}

func (o *GetServicesOK) Error() string {
	return fmt.Sprintf("[GET /services][%d] getServicesOK  %+v", 200, o.Payload)
}

func (o *GetServicesOK) GetPayload() *models.Services {
	return o.Payload
}

func (o *GetServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Services)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesUnauthorized creates a GetServicesUnauthorized with default headers values
func NewGetServicesUnauthorized() *GetServicesUnauthorized {
	return &GetServicesUnauthorized{}
}

/*GetServicesUnauthorized handles this case with default header values.

The requester is not authorized.
*/
type GetServicesUnauthorized struct {
	Payload *models.Error
}

func (o *GetServicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /services][%d] getServicesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetServicesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesInternalServerError creates a GetServicesInternalServerError with default headers values
func NewGetServicesInternalServerError() *GetServicesInternalServerError {
	return &GetServicesInternalServerError{}
}

/*GetServicesInternalServerError handles this case with default header values.

The server has encountered a situation it does not know how to handle.
*/
type GetServicesInternalServerError struct {
	Payload *models.Error
}

func (o *GetServicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /services][%d] getServicesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServicesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesDefault creates a GetServicesDefault with default headers values
func NewGetServicesDefault(code int) *GetServicesDefault {
	return &GetServicesDefault{
		_statusCode: code,
	}
}

/*GetServicesDefault handles this case with default header values.

Generic error.
*/
type GetServicesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get services default response
func (o *GetServicesDefault) Code() int {
	return o._statusCode
}

func (o *GetServicesDefault) Error() string {
	return fmt.Sprintf("[GET /services][%d] GetServices default  %+v", o._statusCode, o.Payload)
}

func (o *GetServicesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServicesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
