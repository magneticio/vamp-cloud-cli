// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/magneticio/vamp-cloud-cli/models"
)

// GetServiceVersionsIDReader is a Reader for the GetServiceVersionsID structure.
type GetServiceVersionsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceVersionsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceVersionsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServiceVersionsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServiceVersionsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceVersionsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServiceVersionsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetServiceVersionsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetServiceVersionsIDOK creates a GetServiceVersionsIDOK with default headers values
func NewGetServiceVersionsIDOK() *GetServiceVersionsIDOK {
	return &GetServiceVersionsIDOK{}
}

/*GetServiceVersionsIDOK handles this case with default header values.

A service version object.
*/
type GetServiceVersionsIDOK struct {
	Payload *models.ServiceVersion
}

func (o *GetServiceVersionsIDOK) Error() string {
	return fmt.Sprintf("[GET /service-versions/{id}][%d] getServiceVersionsIdOK  %+v", 200, o.Payload)
}

func (o *GetServiceVersionsIDOK) GetPayload() *models.ServiceVersion {
	return o.Payload
}

func (o *GetServiceVersionsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceVersionsIDUnauthorized creates a GetServiceVersionsIDUnauthorized with default headers values
func NewGetServiceVersionsIDUnauthorized() *GetServiceVersionsIDUnauthorized {
	return &GetServiceVersionsIDUnauthorized{}
}

/*GetServiceVersionsIDUnauthorized handles this case with default header values.

The requester is not authorized.
*/
type GetServiceVersionsIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetServiceVersionsIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /service-versions/{id}][%d] getServiceVersionsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetServiceVersionsIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceVersionsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceVersionsIDForbidden creates a GetServiceVersionsIDForbidden with default headers values
func NewGetServiceVersionsIDForbidden() *GetServiceVersionsIDForbidden {
	return &GetServiceVersionsIDForbidden{}
}

/*GetServiceVersionsIDForbidden handles this case with default header values.

The requester does not have access rights to the resource.
*/
type GetServiceVersionsIDForbidden struct {
	Payload *models.Error
}

func (o *GetServiceVersionsIDForbidden) Error() string {
	return fmt.Sprintf("[GET /service-versions/{id}][%d] getServiceVersionsIdForbidden  %+v", 403, o.Payload)
}

func (o *GetServiceVersionsIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceVersionsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceVersionsIDNotFound creates a GetServiceVersionsIDNotFound with default headers values
func NewGetServiceVersionsIDNotFound() *GetServiceVersionsIDNotFound {
	return &GetServiceVersionsIDNotFound{}
}

/*GetServiceVersionsIDNotFound handles this case with default header values.

The server can not find the requested resource.
*/
type GetServiceVersionsIDNotFound struct {
	Payload *models.Error
}

func (o *GetServiceVersionsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /service-versions/{id}][%d] getServiceVersionsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetServiceVersionsIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceVersionsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceVersionsIDInternalServerError creates a GetServiceVersionsIDInternalServerError with default headers values
func NewGetServiceVersionsIDInternalServerError() *GetServiceVersionsIDInternalServerError {
	return &GetServiceVersionsIDInternalServerError{}
}

/*GetServiceVersionsIDInternalServerError handles this case with default header values.

The server has encountered a situation it does not know how to handle.
*/
type GetServiceVersionsIDInternalServerError struct {
	Payload *models.Error
}

func (o *GetServiceVersionsIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /service-versions/{id}][%d] getServiceVersionsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServiceVersionsIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceVersionsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceVersionsIDDefault creates a GetServiceVersionsIDDefault with default headers values
func NewGetServiceVersionsIDDefault(code int) *GetServiceVersionsIDDefault {
	return &GetServiceVersionsIDDefault{
		_statusCode: code,
	}
}

/*GetServiceVersionsIDDefault handles this case with default header values.

Generic error.
*/
type GetServiceVersionsIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get service versions ID default response
func (o *GetServiceVersionsIDDefault) Code() int {
	return o._statusCode
}

func (o *GetServiceVersionsIDDefault) Error() string {
	return fmt.Sprintf("[GET /service-versions/{id}][%d] GetServiceVersionsID default  %+v", o._statusCode, o.Payload)
}

func (o *GetServiceVersionsIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServiceVersionsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
