// Code generated by mockery v1.0.0. DO NOT EDIT.

package adaptersmocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/magneticio/vamp-cloud-cli/cmd/models"

// VampCloudReleasesClient is an autogenerated mock type for the VampCloudReleasesClient type
type VampCloudReleasesClient struct {
	mock.Mock
}

// GetLastRelease provides a mock function with given fields: applicationID, serviceID
func (_m *VampCloudReleasesClient) GetLastRelease(applicationID int64, serviceID int64) (*models.Release, error) {
	ret := _m.Called(applicationID, serviceID)

	var r0 *models.Release
	if rf, ok := ret.Get(0).(func(int64, int64) *models.Release); ok {
		r0 = rf(applicationID, serviceID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Release)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64, int64) error); ok {
		r1 = rf(applicationID, serviceID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetReleaseStatusByID provides a mock function with given fields: releaseID
func (_m *VampCloudReleasesClient) GetReleaseStatusByID(releaseID string) (*models.ReleaseStatus, error) {
	ret := _m.Called(releaseID)

	var r0 *models.ReleaseStatus
	if rf, ok := ret.Get(0).(func(string) *models.ReleaseStatus); ok {
		r0 = rf(releaseID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ReleaseStatus)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(releaseID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
