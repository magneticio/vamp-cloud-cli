// Code generated by mockery v1.0.0. DO NOT EDIT.

package adaptersmocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/magneticio/vamp-cloud-cli/cmd/models"

// VampCloudPoliciesClient is an autogenerated mock type for the VampCloudPoliciesClient type
type VampCloudPoliciesClient struct {
	mock.Mock
}

// GetPolicy provides a mock function with given fields: name
func (_m *VampCloudPoliciesClient) GetPolicy(name string) (*models.Policy, error) {
	ret := _m.Called(name)

	var r0 *models.Policy
	if rf, ok := ret.Get(0).(func(string) *models.Policy); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Policy)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPolicyByID provides a mock function with given fields: id
func (_m *VampCloudPoliciesClient) GetPolicyByID(id int64) (*models.Policy, error) {
	ret := _m.Called(id)

	var r0 *models.Policy
	if rf, ok := ret.Get(0).(func(int64) *models.Policy); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Policy)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListPolicies provides a mock function with given fields:
func (_m *VampCloudPoliciesClient) ListPolicies() ([]models.Policy, error) {
	ret := _m.Called()

	var r0 []models.Policy
	if rf, ok := ret.Get(0).(func() []models.Policy); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Policy)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
