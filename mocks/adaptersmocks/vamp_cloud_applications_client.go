// Code generated by mockery v1.0.0. DO NOT EDIT.

package adaptersmocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/magneticio/vamp-cloud-cli/cmd/models"

// VampCloudApplicationsClient is an autogenerated mock type for the VampCloudApplicationsClient type
type VampCloudApplicationsClient struct {
	mock.Mock
}

// AttachServiceToApplication provides a mock function with given fields: applicationID, serviceID, policyID
func (_m *VampCloudApplicationsClient) AttachServiceToApplication(applicationID int64, serviceID int64, policyID int64) error {
	ret := _m.Called(applicationID, serviceID, policyID)

	var r0 error
	if rf, ok := ret.Get(0).(func(int64, int64, int64) error); ok {
		r0 = rf(applicationID, serviceID, policyID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetApplication provides a mock function with given fields: name
func (_m *VampCloudApplicationsClient) GetApplication(name string) (*models.Application, error) {
	ret := _m.Called(name)

	var r0 *models.Application
	if rf, ok := ret.Get(0).(func(string) *models.Application); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Application)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInstallationCommand provides a mock function with given fields: applicationID
func (_m *VampCloudApplicationsClient) GetInstallationCommand(applicationID int64) (string, error) {
	ret := _m.Called(applicationID)

	var r0 string
	if rf, ok := ret.Get(0).(func(int64) string); ok {
		r0 = rf(applicationID)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(applicationID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListApplications provides a mock function with given fields:
func (_m *VampCloudApplicationsClient) ListApplications() ([]models.Application, error) {
	ret := _m.Called()

	var r0 []models.Application
	if rf, ok := ret.Get(0).(func() []models.Application); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Application)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PostApplication provides a mock function with given fields: application
func (_m *VampCloudApplicationsClient) PostApplication(application models.Application) (int64, error) {
	ret := _m.Called(application)

	var r0 int64
	if rf, ok := ret.Get(0).(func(models.Application) int64); ok {
		r0 = rf(application)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Application) error); ok {
		r1 = rf(application)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
